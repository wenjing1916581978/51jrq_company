<style lang="scss">

.portrait-box {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 40rpx 0 10rpx;
    .icon-upload {
        margin-bottom: 10rpx;
        width: 140rpx;
        height: 140rpx;
    }
    text {
        font-size: 24rpx;
        color: #a0a0a0;
    }
}
.list-container {
    display: flex;
    flex-direction: column;
    padding: 0 40rpx;
    .list-item {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        font-size: 28rpx;
        color: #888888;
        height: 100rpx;
        border-bottom: #f1f1f1 solid 2rpx;
        .label {
            min-width: 120rpx;
            color: #353535;
        }
    }
    .input-area {
        input {
            text-align: right;
            color: #888888;
            width: 100%;
        }
        .phcolor {
            color: #888888;
            text-align: right;
        }
    }
}
.work-content {
    height: 80rpx;
    font-size: 28rpx;
    line-height: 80rpx;
    margin-left: 40rpx;
    color: #353535;
}
.big {
    background: white;
    .section {
        margin: auto 40rpx;
        textarea {
            padding: 30rpx auto;
            width: 100%;
            font-size: 28rpx;
            color: #888888;
        }
    }
}
.btn-box {
    margin: 50rpx auto;
    width:586rpx;
    height:80rpx;
    .save-btn {
        width:586rpx;
        height:80rpx;
        text-align:center;
        font-size:36rpx;
        color:#fff;
        background-color:#ff9e00;
    }
}
/*  重写 radio 样式  */
radio{
    width: 40rpx;
    margin-left:40rpx;
    margin-right:6rpx;
    line-height:40rpx;
}

radio .wx-radio-input{
    border-radius: 50%;
    width: 38rpx;
    height: 38rpx;
}

/* 选中后的样式*/
radio .wx-radio-input.wx-radio-input-checked{
  background: #FF9E00!important;
  border-color:#FF9E00!important;

}
radio .wx-radio-input.wx-radio-input-checked::before{
    border-radius: 50%;
    width: 24rpx;
    height: 24rpx;
    text-align: center;
    font-size: 0; /* 对勾大小 26rpx */
    color:#fff; /* 对勾颜色 */
    background: #ffffff;
    border-color: #ffffff;
}
.required{
  color: #f16049;
  margin-right: 2rpx;
}
</style>

<template>
  <view class="base-edit-container">
    <block wx:if="{{initarr[0]&&initarr[1]&&initarr[2]&&initarr[3]&&initarr[4]&&initarr[5]&&initarr[6]&&init}}">
      <view class="list-container">
          <view class="list-item">
              <text class="label"><text class="required">*</text>职位名称</text>
              <view class="input-area">
                  <input placeholder-class="phcolor" type="text" data-name="jobname" bindinput="inputChange" value="{{form.jobname}}" placeholder="请填写" maxlength="30" />
              </view>
          </view>
          <view class="list-item">
              <text class="label"><text class="required">*</text>招聘人数</text>
              <view class="input-area">
                  <input placeholder-class="phcolor" type="number" data-name="number" bindinput="inputChange" value="{{form.number}}" placeholder="请填写" maxlength="3"/>
              </view>
          </view>
          <view class="list-item">
              <text class="label"><text class="required">*</text>职业类型</text>
              <picker data-name="jobcategoryid" data-current="0" value="{{dictionaryindex[0]}}" range-key="value" bindchange="pickerChange" range="{{dictionaryarr[0]}}">
                  <text wx:if="{{form.jobcategoryid}}">{{form.jobcategoryid}}</text>
                  <text wx:else>请选择</text>
              </picker>
          </view>
          <view class="list-item">
              <text class="label"><text class="required">*</text>职位福利</text>
              <view class="input-area" @tap="selWeal">
                <text wx:if="{{form.weal}}">{{form.weal}}</text>
                <text wx:else>请选择</text>
              </view>
          </view>
          <view class="list-item">
              <text class="label"><text class="required">*</text>工作城市</text>
              <picker data-name="jobcity" data-current="1" value="{{dictionaryindex[1]}}" range-key="value" bindchange="pickerChange" range="{{dictionaryarr[1]}}">
                  <text wx:if="{{form.jobcity}}">{{form.jobcity}}</text>
                  <text wx:else>请选择</text>
              </picker>
          </view>
          <view class="list-item">
              <text class="label">工作地点</text>
              <view class="input-area">
                  <input placeholder-class="phcolor" type="text" data-name="jobaddress" bindinput="inputChange" value="{{form.jobaddress}}" placeholder="请填写" maxlength="80"/>
              </view>
          </view>
          <view class="list-item">
              <text class="label"><text class="required">*</text>工作性质</text>
              <picker data-name="jobtype" data-current="2" value="{{dictionaryindex[2]}}" range-key="value" bindchange="pickerChange" range="{{dictionaryarr[2]}}">
                  <text wx:if="{{form.jobtype}}">{{form.jobtype}}</text>
                  <text wx:else>请选择</text>
              </picker>
          </view>
          <view class="list-item">
              <text class="label"><text class="required">*</text>薪资范围</text>
              <picker data-name="salary" data-current="3" value="{{dictionaryindex[3]}}" range-key="value" bindchange="pickerChange" range="{{dictionaryarr[3]}}">
                  <text wx:if="{{form.salary}}">{{form.salary}}</text>
                  <text wx:else>请选择</text>
              </picker>
          </view>
          <view class="list-item">
              <text class="label"><text class="required">*</text>工作经验</text>
              <picker data-name="workyears" data-current="4" value="{{dictionaryindex[4]}}" range-key="value" bindchange="pickerChange" range="{{dictionaryarr[4]}}">
                  <text wx:if="{{form.workyears}}">{{form.workyears}}</text>
                  <text wx:else>请选择</text>
              </picker>
          </view>
          <view class="list-item">
              <text class="label"><text class="required">*</text>学历要求</text>
              <picker data-name="ebid" data-current="5" value="{{dictionaryindex[5]}}" range-key="value" bindchange="pickerChange" range="{{dictionaryarr[5]}}">
                  <text wx:if="{{form.ebid}}">{{form.ebid}}</text>
                  <text wx:else>请选择</text>
              </picker>
          </view>
          <!-- 是否到面 S -->
          <view class="list-item" wx:if="{{false}}">
              <text class="label">是否到面</text>
              <view class="input-area">
              <radio-group class="radio-group" bindchange="radioChange" value="{{form.isInterviewService}}">
                <label class="radio" wx:for="{{radioData}}">
                  <radio value="{{item.name}}" checked="{{item.checked}}" />
                {{item.value}}
                </label>
              </radio-group>
              </view>
          </view>
          <!-- 是否到面 E-->
      </view>

      <view class="work-content">
          <text class="required">*</text>职位描述
      </view>
      <view class="big">
          <view class="section">
            <textarea data-name="jobdescription" bindinput="inputChange" value="{{form.jobdescription}}" placeholder="请输入公司介绍（200字以内）" placeholder-style="color:#888888;font-size:28rpx;" maxlength="200"/>
          </view>
      </view>
      <view class="btn-box">
          <button class="save-btn" @tap="formSubmit">保存</button>
      </view>
    </block>
    <!-- 初始化加载 S -->
    <loading wx:else></loading>
    <!-- 初始化加载 S -->
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '../../api/api';
  import tip from '../../utils/tip';
  import utils from '../../utils/utils';
  import Loading from "../../components/loading";
  export default class BaseInfo extends wepy.page {

      config = {
        navigationBarTitleText: '基本信息',
      }

      components = {
        loading:Loading
      }

     data = {

        token:'',
        tokenKey:'',
        jobid: '',
        radioData:[{name: '1', value: '是'},{name: '0', value: '否', checked: 'true'}],
        dictionaryarr:[],
        dictionaryindex:[0,0,0,0,0], //数据字典数组选中index
        initarr:[false,false,false,false,false,false,false], //数据字典初始化
        init:false, //获取工作详情初始化
        form:{
          jobcategoryid:'',
          jobname:'',
          salary:'',
          workyears:'',
          ebid:'',
          jobcity:'',
          jobaddress:'',
          jobdescription:'',
          number:'',
          weal:'',
          jobtype:'',
          isInterviewService:'0',
        }
    }

      onLoad(options) {
        // 获取登录信息
        const that = this;
        let data = wx.getStorageSync('loginInfo')
        if(data){
          that.token = data.token;
          that.tokenKey = data.tokenKey;
        }
        if(options.jobid){
          that.jobid = options.jobid;
        }else{
          that.init = true
        }
        that.$apply();
        that.getData()
        // 获取数据字典
        const arr = ["DICT_COMP_INDUSTRY","DICT_COMP_CITY","DICT_JOB_JOBTYPE","DICT_RESUME_ESC","DICT_WORK_YEARS","DICT_JOB_EDU","DICT_JOB_WEAL"]

        for (var i = 0; i < arr.length; i++) {
          that.getDict(arr[i],i)
        }
      }


      searchIndex(arr, item) {
        if (Array.prototype.indexOf){   //判断当前浏览器是否支持
            return arr.indexOf(item);//支持,则直接使用indexOf函数进行输出
        } else {
            for (var i = 0; i < arr.length; i++){
                if (arr[i] === item){
                    return i; //不支持则进入循环,判断为真后输入
                }
            }
        }
        return -1;//不管如何,始终返回-1
      }
      methods = {
        pickerChange(e){
          const that = this
          let index =  parseInt(e.detail.value)
          const {current,name} = e.currentTarget.dataset
          let cur = parseInt(current)
          that.form[name] = that.dictionaryarr[cur][index].label
          that.dictionaryindex[cur] = index
          that.$apply()
        },
        selWeal(){
          var arr=JSON.stringify(this.dictionaryarr[6])
          wepy.navigateTo({
           url: '/pages/personal/welfare?value='+this.form.weal+'&arr='+arr
         })
        },
        inputChange(e){
          const that = this
          const {name} = e.currentTarget.dataset
          that.form[name]=e.detail.value
          that.$apply()
        },
        radioChange(e) {
          console.log(e.detail.value,'是否到面');
          this.form.isInterviewService=e.detail.value;
          this.$apply();
        },
        // 提交表单--基本信息编辑新增
        formSubmit: function(e) {
          const that = this;
          const {form} = that
          if(form.jobname==''){
            tip.error('职位名不为空')
            return false
          }else if(form.number==''){
            tip.error('招聘数量')
            return false
          }else if(form.jobcategoryid==''){
            tip.error('请选择职业类型')
            return false
          }else if(form.weal==''){
            tip.error('职位福利不为空')
            return false
          }else if(form.jobcity==''){
            tip.error('工作城市不为空')
            return false
          }else if(form.jobaddress==''){
            tip.error('请填写工作地点')
            return false
          }else if(form.jobtype==''){
            tip.error('请选择工作性质')
            return false
          }else if(form.salary==''){
            tip.error('请输入薪资范围')
            return false
          }else if(form.workyears==''){
            tip.error('请选择工作经验')
            return false
          }else if(form.ebid==''){
            tip.error('请选择学历要求')
            return false
          }else if(form.jobdescription==''){
            tip.error('职位描述不为空')
            return false
          }

          var obj2 = {
              "token": this.token,
              "tokenKey": this.tokenKey,
              "jobid": this.jobid,
              "number":form.number.toString()
          }
          if(!obj2.jobid){
              delete obj2['jobid']
          }
          // form.number=toString()
          this.changeData(form,obj2)
        },
        bindPickerChange1: function(e) {
            this.jobcategoryidStatus = false ;
            this.index1 = e.detail.value;
            this.a_jobcategoryid=this.jobcategoryid[e.detail.value]
            console.log(e.detail.value,this.jobcategoryid[e.detail.value])
            this.$apply();
        },
        bindPickerChange2: function(e) {
            this.index = e.detail.value;
            this.number = parseInt(e.detail.value) + 1;
            this.$apply();
        },
        bindPickerChange3: function(e) {
            this.jobcityStatus = false;
            this.index3 = e.detail.value;
            this.a_jobcity=this.jobcity[e.detail.value]
            this.$apply();
        },
        bindPickerChange4: function(e) {
            this.jobtypeStatus = false;
            this.index4 = e.detail.value;
            this.a_jobtype=this.jobtype[e.detail.value]
            this.$apply();
        },
        bindPickerChange5: function(e) {
            this.salaryStatus = false ;
            this.index5 = e.detail.value;
            this.a_salary=this.salary[e.detail.value]
            this.$apply();
        },
        bindPickerChange6: function(e) {
            this.workyearsStatus = false;
            this.index6 = e.detail.value;
            this.a_workyears=this.workyears[e.detail.value]
            //this.index6 = e.detail.value;
            this.$apply();
        },
        bindPickerChange7: function(e) {
            this.ebidStatus = false;
            this.index7 = e.detail.value;
            this.a_ebid=this.ebid[e.detail.value]
            this.$apply();
        }

    };
    setWeal(v){
      this.form.weal = v
      this.$apply()
    }
    //获取数据字典
    getDict(code,i) {
      const that = this
      api.getDictData({
        query: {
          head: {
            "transcode": "DC001",
            "type": "h"
          },
          data: {
            "groupcode": code,
            "selAll": "false"
          }
        }
      }).then(res=>{
        if(res.data.returnCode=="AAAAAAA"){
          let list = res.data.data
          if(code == 'DICT_RESUME_ESC') list.shift()
          that.dictionaryarr[i] = list
          that.initarr[i] = true
          that.$apply()
        }

      }).catch(er=>{
        that.initarr[i] = true
        that.$apply()
      })
    }
    //获取简历基本信息
    getData() {
        var that=this
        const {token,tokenKey,jobid,form} = that
        if(jobid=='') return false
        api.getJobInfo({
          query: {
            head: {
                "transcode": "H0051",
                "type": "h"
            },
            data: {
                "token": token,
                "tokenKey": tokenKey,
                "jobid": jobid
            }
          }
        }).then(res => {
          that.init = true
          console.log(res,'职位');
          if(res.data.returnCode=="AAAAAAA"){
            let data = res.data.data
            for(var key in form){
              if(data[key]) that.form[key] = data[key]
            }
            that.$apply()
          }
          that.$apply();
        }).catch(err=>{
          that.init = true
          that.$apply();
          tip.error(err.returnMsg);
        })
    }
    //修改表单数据
    async changeData(obj, obj2) {
        wx.showLoading({
            title: '加载中',
        })
        let data = Object.assign(obj,obj2);
        console.log(data)
        // console.log(data, this.baseInfo, obj)
        await api.getCompanyInfo({
        query: {
            head: {
                "transcode": "H0012",
                "type": "h"
            },
            data: data
          }
        }).then(res=>{
          wx.hideLoading()
          tip.error("操作成功");
          wx.navigateBack({
            delta: 1
          })
            if(that.jobid){
                that.refresh=true
                that.$apply()
            }

        }).catch(err=>{
          wx.hideLoading()
          // tip.error(data.returnMsg);
        })

    }
    onUnload(){
        var that=this
          var pages = getCurrentPages(); // 当前页面
          var beforePage = pages[pages.length - 2];
          if(that.refresh){
            var reg=new RegExp('jobdetails');
            if (reg.test(beforePage.route)) {
                pages[pages.length - 3].pageDataChange();
                pages[pages.length - 2].pageDataChange();
            }else{
                //
                beforePage.pageDataChange()
            }

          }


    }
  }
</script>
